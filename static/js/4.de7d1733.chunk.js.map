{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","json","ok","Error","concat","status","abrupt","t0","massage","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComic","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","href","RandomChar","setchar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setcharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","f","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","PureComponent","CharSearchForm","setChar","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.de7d1733.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=a9fcceddf72b2bba2170a4db6fd36de0\";\n  const _baseoffset = 210;\n\n  const getAllCharacters = async (offset = _baseoffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComic = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComic,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"aplication/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.massage);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, clearError, request, error };\n};\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setchar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setchar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useEffect, useRef, useState } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport PropTypes from \"prop-types\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n  const [charList, setcharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setcharList((charList) => [...charList, ...newCharList]);\n\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          f\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setchar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setchar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics && comics.length > 0 ? (\n          comics.map((item, i) => {\n            if (i > 9) return null;\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            );\n          })\n        ) : (\n          <li className=\"char__comics-item\">\n            There is no comics with this character\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { PureComponent } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends PureComponent {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage as FormikErrorMessage,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./CharSearchForm.scss\";\n\nconst CharSearchForm = () => {\n  const [char, setChar] = useState(null);\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = (name) => {\n    clearError();\n\n    getCharacterByName(name).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? (\n    <div className=\"char__search-critical-error\">\n      <ErrorMessage />\n    </div>\n  ) : null;\n  const results = !char ? null : char.length > 0 ? (\n    <div className=\"char__search-wrapper\">\n      <div className=\"char__search-success\">\n        There is! Visit {char[0].name} page?\n      </div>\n      <Link\n        to={`/characters/${char[0].id}`}\n        className=\"button button__secondary\"\n      >\n        <div className=\"inner\">To page</div>\n      </Link>\n    </div>\n  ) : (\n    <div className=\"char__search-error\">\n      The character was not found. Check the name and try again\n    </div>\n  );\n\n  return (\n    <div className=\"char__search-form\">\n      <Formik\n        initialValues={{\n          charName: \"\",\n        }}\n        validationSchema={Yup.object({\n          charName: Yup.string().required(\"This field is required\"),\n        })}\n        onSubmit={({ charName }) => {\n          updateChar(charName);\n        }}\n      >\n        <Form>\n          <label className=\"char__search-label\" htmlFor=\"charName\">\n            Or find a character by name:\n          </label>\n          <div className=\"char__search-wrapper\">\n            <Field\n              id=\"charName\"\n              name=\"charName\"\n              type=\"text\"\n              placeholder=\"Enter name\"\n            />\n            <button\n              type=\"submit\"\n              className=\"button button__main\"\n              disabled={loading}\n            >\n              <div className=\"inner\">find</div>\n            </button>\n          </div>\n          <FormikErrorMessage\n            component=\"div\"\n            className=\"char__search-error\"\n            name=\"charName\"\n          />\n        </Form>\n      </Formik>\n      {results}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default CharSearchForm;\n","import { useState } from \"react\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from \"../../resources/img/vision.png\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\n\nconst MainPage = () => {\n  const [selectedChar, setchar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setchar(id);\n  };\n\n  return (\n    <>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <div>\n          <ErrorBoundary>\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharSearchForm />\n          </ErrorBoundary>\n        </div>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\nexport default MainPage;\n"],"sourceRoot":""}