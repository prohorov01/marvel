{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","json","ok","Error","concat","status","abrupt","t0","massage","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComic","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","SinglePage","Component","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/6.dc055ec1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=a9fcceddf72b2bba2170a4db6fd36de0\";\n  const _baseoffset = 210;\n\n  const getAllCharacters = async (offset = _baseoffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComic = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComic,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"aplication/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.massage);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, clearError, request, error };\n};\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { loading, error, getComic, getCharacter, clearError } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case \"comic\":\n        getComic(id).then(onDataLoaded);\n        break;\n      case \"character\":\n        getCharacter(id).then(onDataLoaded);\n    }\n  };\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !data) ? (\n    <Component data={data} />\n  ) : null;\n\n  return (\n    <>\n      <AppBanner />\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  );\n};\n\nexport default SinglePage;\n"],"sourceRoot":""}