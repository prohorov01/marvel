{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","json","ok","Error","concat","status","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComic","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","RandomChar","setchar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","View","onClick","mjolnir","imgStyle","memo","CharList","props","charList","setcharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","CharInfo","charId","ErrorBoundary","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","value","errorInfo","console","log","this","setState","PureComponent","CharSearchForm","setChar","errorMessage","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","MainPage","selectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/5.72fecaab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { request, clearError, process, setProcess } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=a9fcceddf72b2bba2170a4db6fd36de0\";\n  const _baseoffset = 210;\n\n  const getAllCharacters = async (offset = _baseoffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComic = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    clearError,\n    process,\n    setProcess,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComic,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [process, setProcess] = useState(\"waiting\");\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"aplication/json\" }\n    ) => {\n      setProcess(\"loading\");\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        return data;\n      } catch (e) {\n        setProcess(\"error\");\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setProcess(\"loading\");\n  }, []);\n\n  return { clearError, request, process, setProcess };\n};\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\nimport Skeleton from \"../components/skeleton/Skeleton\";\n\nconst setContent = (process, Component, data) => {\n  switch (process) {\n    case \"waiting\":\n      return <Skeleton />;\n    case \"loading\":\n      return <Spinner />;\n    case \"confirmed\":\n      return <Component data={data} />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\nexport default setContent;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState, memo } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setchar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setchar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    getCharacter(id)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\nconst View = ({ data }) => {\n  const { name, description, thumbnail } = data;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RandomChar);\n","import { useEffect, useRef, useState, useMemo } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport PropTypes from \"prop-types\";\nimport \"./charList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst CharList = (props) => {\n  const [charList, setcharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { getAllCharacters, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setcharList((charList) => [...charList, ...newCharList]);\n\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n  const elements = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n  }, [process]);\n  return (\n    <div className=\"char__list\">\n      {elements}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import { useEffect, useState, memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setchar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharLoaded = (char) => {\n    setchar(char);\n  };\n\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, comics } = data;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics && comics.length > 0 ? (\n          comics.map((item, i) => {\n            if (i > 9) return null;\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            );\n          })\n        ) : (\n          <li className=\"char__comics-item\">\n            There is no comics with this character\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default memo(CharInfo);\n","import { PureComponent } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends PureComponent {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage as FormikErrorMessage,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./CharSearchForm.scss\";\n\nconst CharSearchForm = () => {\n  const [char, setChar] = useState(null);\n  const { getCharacterByName, clearError, process, setProcess } =\n    useMarvelService();\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = (name) => {\n    clearError();\n\n    getCharacterByName(name)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const errorMessage =\n    process === \"error\" ? (\n      <div className=\"char__search-critical-error\">\n        <ErrorMessage />\n      </div>\n    ) : null;\n  const results = !char ? null : char.length > 0 ? (\n    <div className=\"char__search-wrapper\">\n      <div className=\"char__search-success\">\n        There is! Visit {char[0].name} page?\n      </div>\n      <Link\n        to={`/characters/${char[0].id}`}\n        className=\"button button__secondary\"\n      >\n        <div className=\"inner\">To page</div>\n      </Link>\n    </div>\n  ) : (\n    <div className=\"char__search-error\">\n      The character was not found. Check the name and try again\n    </div>\n  );\n\n  return (\n    <div className=\"char__search-form\">\n      <Formik\n        initialValues={{\n          charName: \"\",\n        }}\n        validationSchema={Yup.object({\n          charName: Yup.string().required(\"This field is required\"),\n        })}\n        onSubmit={({ charName }) => {\n          updateChar(charName);\n        }}\n      >\n        <Form>\n          <label className=\"char__search-label\" htmlFor=\"charName\">\n            Or find a character by name:\n          </label>\n          <div className=\"char__search-wrapper\">\n            <Field\n              id=\"charName\"\n              name=\"charName\"\n              type=\"text\"\n              placeholder=\"Enter name\"\n            />\n            <button\n              type=\"submit\"\n              className=\"button button__main\"\n              disabled={process === \"loading\"}\n            >\n              <div className=\"inner\">find</div>\n            </button>\n          </div>\n          <FormikErrorMessage\n            component=\"div\"\n            className=\"char__search-error\"\n            name=\"charName\"\n          />\n        </Form>\n      </Formik>\n      {results}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default CharSearchForm;\n","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from \"../../resources/img/vision.png\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\n\nconst MainPage = () => {\n  const [selectedChar, setchar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setchar(id);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Marvel information portal\" />\n        <title>Marvel information portal</title>\n      </Helmet>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <div>\n          <ErrorBoundary>\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharSearchForm />\n          </ErrorBoundary>\n        </div>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\nexport default MainPage;\n"],"sourceRoot":""}