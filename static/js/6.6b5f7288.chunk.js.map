{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","json","ok","Error","concat","status","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComic","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","SinglePage","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded"],"mappings":"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","file":"static/js/6.6b5f7288.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { request, clearError, process, setProcess } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=a9fcceddf72b2bba2170a4db6fd36de0\";\n  const _baseoffset = 210;\n\n  const getAllCharacters = async (offset = _baseoffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComic = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    clearError,\n    process,\n    setProcess,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComic,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [process, setProcess] = useState(\"waiting\");\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"aplication/json\" }\n    ) => {\n      setProcess(\"loading\");\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        return data;\n      } catch (e) {\n        setProcess(\"error\");\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setProcess(\"loading\");\n  }, []);\n\n  return { clearError, request, process, setProcess };\n};\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\nimport Skeleton from \"../components/skeleton/Skeleton\";\n\nconst setContent = (process, Component, data) => {\n  switch (process) {\n    case \"waiting\":\n      return <Skeleton />;\n    case \"loading\":\n      return <Spinner />;\n    case \"confirmed\":\n      return <Component data={data} />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\nexport default setContent;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport setContent from \"../../utils/setContent\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { getComic, getCharacter, clearError, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case \"comic\":\n        getComic(id)\n          .then(onDataLoaded)\n          .then(() => setProcess(\"confirmed\"));\n        break;\n      case \"character\":\n        getCharacter(id)\n          .then(onDataLoaded)\n          .then(() => setProcess(\"confirmed\"));\n    }\n  };\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  };\n\n  return (\n    <>\n      <AppBanner />\n      {setContent(process, Component, data)}\n    </>\n  );\n};\n\nexport default SinglePage;\n"],"sourceRoot":""}